---

- name: Install MySQL-python
  package: name=python-mysqldb state=latest # python-pymysql - BROKEN: mysql config!
  check_mode: no
  when: ansible_os_family == "Debian"
  tags: [ mysql-multi-users, configs, mysql-grants ]

- name: Install MySQL-python
  package: name=MySQL-python state=latest
  check_mode: no
  when: ansible_os_family == "RedHat"
  tags: [ mysql-multi-users, configs, mysql-grants ]

- name: 'Getting mysql instances'
  shell: find /etc/mysql-multi/ /etc/my.cnf /etc/mysql/my.cnf -name "*.cnf" -readable 2>&- || test 1
  register: mysql_multi_users_instances
  ignore_errors: False
  changed_when: False
  check_mode: no
  tags: [ mysql-multi-users, configs, mysql-grants ]

- name: setting instances list
  set_fact: 
    instances: "{{ instances|default([]) + [{'mysql_name': item|regex_replace('.*/([^/]+).cnf', '\\1'),'mysql_config': item}]}}"
  with_items: "{{ mysql_multi_users_instances.stdout_lines|default([]) }}"
  delegate_to: 127.0.0.1
  tags: [ mysql-multi-users, configs, mysql-grants ]

- name: Debug
  debug: 
    var: "{{item}}"
    verbosity: 1
  delegate_to: 127.0.0.1
  run_once: true
  with_items: 
    - instances
    - mysql_multi_users
  tags: [ mysql-multi-users, configs, mysql-grants ]

- name: Match instance
  include: instance-setup.yml 
    instance={{ inst|combine(mysql_multi_users[inst.mysql_name]|default({}), recursive=True) }}
  when: 
    - mysql_multi_users is defined
    - inst.mysql_name in mysql_multi_users or mysql_multi_users['*'] is defined
  with_items: "{{ instances|default([]) }}"
  loop_control:
    loop_var: "inst"
    label: "instance: {{ inst.mysql_name }}"
  tags: [ mysql-multi-users, configs, mysql-grants ]

